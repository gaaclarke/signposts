// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings for `src/signposts.h`.
///
/// Regenerate bindings with `dart run ffigen --config ffigen.yaml`.
///
class SignpostsBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SignpostsBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SignpostsBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int flt_signposts_emit(
    ffi.Pointer<ffi.Int8> str,
  ) {
    return _flt_signposts_emit(
      str,
    );
  }

  late final _flt_signposts_emitPtr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Int8>)>>(
          'flt_signposts_emit');
  late final _flt_signposts_emit =
      _flt_signposts_emitPtr.asFunction<int Function(ffi.Pointer<ffi.Int8>)>();

  int flt_signposts_begin_interval(
    int identifier,
    ffi.Pointer<ffi.Int8> str,
  ) {
    return _flt_signposts_begin_interval(
      identifier,
      str,
    );
  }

  late final _flt_signposts_begin_intervalPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(ffi.Uint64,
              ffi.Pointer<ffi.Int8>)>>('flt_signposts_begin_interval');
  late final _flt_signposts_begin_interval = _flt_signposts_begin_intervalPtr
      .asFunction<int Function(int, ffi.Pointer<ffi.Int8>)>();

  int flt_signposts_end_interval(
    int identifier,
    ffi.Pointer<ffi.Int8> str,
  ) {
    return _flt_signposts_end_interval(
      identifier,
      str,
    );
  }

  late final _flt_signposts_end_intervalPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(ffi.Uint64,
              ffi.Pointer<ffi.Int8>)>>('flt_signposts_end_interval');
  late final _flt_signposts_end_interval = _flt_signposts_end_intervalPtr
      .asFunction<int Function(int, ffi.Pointer<ffi.Int8>)>();
}
